<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ArduinoCommunicator</name>
    </assembly>
    <members>
        <member name="T:ArduinoCommunicator.BoardInfo">
            <summary>
            Retrieve information about the Arduino board.
            </summary>
        </member>
        <member name="M:ArduinoCommunicator.BoardInfo.#ctor">
            <summary>
            Creates a new instance for Arduino UNO.
            </summary>
        </member>
        <member name="M:ArduinoCommunicator.BoardInfo.#ctor(ArduinoCommunicator.BoardType)">
            <summary>
            Creates a news instance for the specific BoardType.
            </summary>
            <param name="board">Board type to retrieve its information.</param>
        </member>
        <member name="P:ArduinoCommunicator.BoardInfo.BoardName">
            <summary>
            Board type of this instance.
            </summary>
        </member>
        <member name="P:ArduinoCommunicator.BoardInfo.NumberOfAnalogInputPins">
            <summary>
            Number of analog input pins (usually denoted by 'ANALOG IN' on the board)
            </summary>
        </member>
        <member name="P:ArduinoCommunicator.BoardInfo.AnalogOutPins">
            <summary>
            List of analog (PWM) output pins (usually denoted by a ~ sign next to the pin number on the board)
            </summary>
        </member>
        <member name="P:ArduinoCommunicator.BoardInfo.NumberOfDigitalPins">
            <summary>
            Number of digital pins (usually denoted by 'DIGITAL' on the board)
            </summary>
        </member>
        <member name="T:ArduinoCommunicator.BoardType">
            <summary>
            Board type (UNO, DUE, ...)
            </summary>
        </member>
        <member name="F:ArduinoCommunicator.BoardType.UNO">
            <summary>
            Arduino UNO board
            </summary>
        </member>
        <member name="T:ArduinoCommunicator.Arduino">
            <summary>
            Holds state of the Arduino board
            </summary>
        </member>
        <member name="M:ArduinoCommunicator.Arduino.#ctor(ArduinoCommunicator.BoardType,SerialPortNET.SerialPort)">
            <summary>
            Creates a new instance of Arduino board with the specified board type and connects to it on the serialPort.
            </summary>
            <param name="board">Arduino board type</param>
            <param name="serialPort">Serial port to which the Arduino is connected</param>
            <exception cref="T:System.IO.IOException">Throws IOException if connection fails.</exception>
        </member>
        <member name="M:ArduinoCommunicator.Arduino.#ctor(ArduinoCommunicator.BoardType)">
            <summary>
            Creates a new instance of Arduino board with the specified board type, and automatically connects.
            </summary>
            <param name="board">Arduino board name</param>
            <exception cref="T:System.IO.IOException">Throws IOException if connection fails.</exception>
        </member>
        <member name="M:ArduinoCommunicator.Arduino.analogRead(System.Int32)">
            <summary>
            Read the analog value on pinNumber. If an error occurs, it will return the previously successfully read number, or zero if no successful previous analogRead operation.
            </summary>
            <param name="pinNumber">Number of analog pin to read from (Usually written as A0, A1, ... on the board)</param>
            <returns>An integer value between 0 to 1023</returns>
        </member>
        <member name="M:ArduinoCommunicator.Arduino.analogWrite(System.Int32,System.Byte)">
            <summary>
            Writes to the analog pin.
            </summary>
            <param name="pinNumber"></param>
            <param name="value"></param>
        </member>
        <member name="M:ArduinoCommunicator.Arduino.digitalRead(System.Int32)">
            <summary>
            Reads digital value of the pin.
            </summary>
            <param name="pinNumber">Pin number to read its digital value.</param>
            <returns>DigitalValue read on the pin.</returns>
        </member>
        <member name="M:ArduinoCommunicator.Arduino.digitalWrite(System.Int32,ArduinoCommunicator.DigitalValue)">
            <summary>
            Writes digital value to the pin.
            </summary>
            <param name="pinNumber">Digital pin to write to.</param>
            <param name="value">Digital value to write to the pin.</param>
        </member>
        <member name="M:ArduinoCommunicator.Arduino.pinMode(System.Int32,ArduinoCommunicator.PinMode)">
            <summary>
            Sets pin mode.
            </summary>
            <param name="pinNumber">Pin number to set the mode on.</param>
            <param name="pinMode">Either PinMode.OUTPUT, PinMode.INPUT, or PinMode.INPUT_PULLUP</param>
        </member>
        <member name="M:ArduinoCommunicator.Arduino.Close">
            <summary>
            Close the connection.
            </summary>
        </member>
        <member name="P:ArduinoCommunicator.Arduino.BoardType">
            <summary>
            Board type of this instance 
            </summary>
        </member>
        <member name="P:ArduinoCommunicator.Arduino.IsConnected">
            <summary>
            True if instance is connected to Arduino board. False otherwise.
            </summary>
        </member>
        <member name="P:ArduinoCommunicator.Arduino.SerialPort">
            <summary>
            The serial port object that Arduino is connected to. Null if not connected.
            </summary>
        </member>
        <member name="T:ArduinoCommunicator.DigitalValue">
            <summary>
            Represents valid and invalid digital values (High, Low and Invalid)
            Implicitly casted to and from bool and int. 
            </summary>
        </member>
        <member name="M:ArduinoCommunicator.DigitalValue.op_Implicit(ArduinoCommunicator.DigitalValue)~System.Boolean">
            <summary>
            Returns true if digitalValue is High and false if it's Low or Invalid
            </summary>
            <param name="digitalValue"></param>
        </member>
        <member name="M:ArduinoCommunicator.DigitalValue.op_Implicit(ArduinoCommunicator.DigitalValue)~System.Byte">
            <summary>
            Returns true if digitalValue is 1 and 0 if it's Low or Invalid
            </summary>
            <param name="digitalValue"></param>
        </member>
        <member name="M:ArduinoCommunicator.DigitalValue.op_Implicit(System.Boolean)~ArduinoCommunicator.DigitalValue">
            <summary>
            Returns DigitalValue.High if true and DigitalValue.Low if false
            </summary>
            <param name="b">Boolean value to cast to DigitalValue</param>
        </member>
        <member name="M:ArduinoCommunicator.DigitalValue.op_Implicit(System.Int32)~ArduinoCommunicator.DigitalValue">
            <summary>
            Returns DigitalValue.High if i > 0 and DigitalValue.Low otherwise
            </summary>
            <param name="i">Integer value to cast to DigitalValue</param>
        </member>
        <member name="M:ArduinoCommunicator.DigitalValue.ToString">
            <summary>
            Returns High, Low or Invalid for respected values of this instance
            </summary>
            <returns></returns>
        </member>
        <member name="F:ArduinoCommunicator.DigitalValue.High">
            <summary>
            Digital value High.
            </summary>
        </member>
        <member name="F:ArduinoCommunicator.DigitalValue.Invalid">
            <summary>
            Digital value invalid. Typically used for pins which values cannot be read.
            </summary>
        </member>
        <member name="F:ArduinoCommunicator.DigitalValue.Low">
            <summary>
            Digital value Low.
            </summary>
        </member>
        <member name="T:ArduinoCommunicator.PinMode">
            <summary>
            Represents pin mode 
            </summary>
        </member>
        <member name="F:ArduinoCommunicator.PinMode.INPUT">
            <summary>
            Digital input pin
            </summary>
        </member>
        <member name="F:ArduinoCommunicator.PinMode.OUTPUT">
            <summary>
            Digital output pin
            </summary>
        </member>
        <member name="F:ArduinoCommunicator.PinMode.INPUT_PULLUP">
            <summary>
            Digital input pin with a pull up resistor. Makes its default value High, unless externally grounded.
            </summary>
        </member>
        <member name="T:ArduinoCommunicator.SerialCommunicator">
            <summary>
            Communicates with Arduino.
            </summary>
        </member>
        <member name="M:ArduinoCommunicator.SerialCommunicator.#ctor(SerialPortNET.SerialPort)">
            <summary>
            Manually select Arduino port settings. Use it for multiple boards, or if you have changed Arduino connection settings.
            </summary>
            <param name="sp">Serial port to connect to</param>
        </member>
        <member name="M:ArduinoCommunicator.SerialCommunicator.#ctor">
            <summary>
            Automatically finds Arduino Board and connect to it
            </summary>
        </member>
        <member name="M:ArduinoCommunicator.SerialCommunicator.connect(SerialPortNET.SerialPort)">
            <summary>
            Connect to a serial port. If no arduino board is found, it would throw and IOException error.
            </summary>
            <param name="sp">SerialPortNET to connect to.</param>
            <exception cref="T:System.IO.IOException"></exception>
        </member>
    </members>
</doc>
